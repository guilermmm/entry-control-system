// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PermitLevel {
  ADMIN
  ATTENDANT
  EMPLOYEE
}

model User {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  register    String      @unique
  password    String
  name        String
  permitLevel PermitLevel
  sector      Sector?     @relation(fields: [sectorId], references: [id])
  sectorId    Int?
  unit        Unit?       @relation(fields: [unitId], references: [id])
  unitId      Int?
  visit       Visit[]
}

model Unit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  employees User[]
  sectors   Sector[]
  visits    Visit[]
}

model Sector {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  unit      Unit     @relation(fields: [unitId], references: [id])
  unitId    Int
  employees User[]
  visit     Visit[]
}

model Visit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  finalized Boolean  @default(false)
  visitor   Visitor  @relation(fields: [visitorId], references: [id])
  visitorId Int
  unit      Unit?    @relation(fields: [unitId], references: [id])
  unitId    Int?
  sector    Sector?  @relation(fields: [sectorId], references: [id])
  sectorId  Int?
  employee  User?    @relation(fields: [userId], references: [id])
  userId    Int?

  @@map("Visitation")
}

model Visitor {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cpf         String   @unique
  name        String
  rg          String
  phone       String
  photo       String
  visitations Visit[]
}
